name: CI

on:
  push:
    branches:
      - main
      - staging
      - trying
  pull_request:

env:
  RUSTFLAGS: -Cdebuginfo=0
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        toolchain: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v2

      - name: install ${{ matrix.toolchain }} toolchain
        id: install_toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true

      - run: rustup component add rustfmt
        if: matrix.toolchain == 'nightly' && matrix.os == 'ubuntu-latest'

      - run: cargo +nightly fmt --all -- --check
        if: matrix.toolchain == 'nightly' && matrix.os == 'ubuntu-latest'
        
      - run: rustup component add clippy
        if: matrix.toolchain == 'nightly'

      - run: cargo +nightly clippy -Z unstable-options --workspace --all-features
        if: matrix.toolchain == 'nightly'

      - run: cargo test --workspace --all-features

      - uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      - env:
          LINKCHECK_URL: https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/download/v0.7.0/mdbook-linkcheck-v0.7.0-x86_64-unknown-linux-gnu.tar.gz
        run: curl -L ${{ env.LINKCHECK_URL }} | tar -C ~/.cargo/bin -xzf -
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      - run: mdbook build book
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      - run: mdbook test -L ./target/debug/deps book
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'
